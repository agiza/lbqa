<?php
// $Id$

/**
 * @file
 *   Lullabot QA Module.
 */

/**
 * Implementation of hook_init().
 */
function lbqa_init() {
  drupal_add_js(drupal_get_path('module', 'lbqa') .'/changeme.js');
}

/**
 * Implementation of hook_enable().
 */
function lbqa_enable() {
  // Enable recommended modules if they are available. We save the modules we
  // enabled to a variable so we can disable them when this feature is disabled.
  if (function_exists('features_get_info') && ($feature = features_get_info('module', 'lbqa', TRUE)) && !empty($feature->info['recommends'])) {
    $all_modules = array_keys(module_rebuild_cache());
    // Filter out any non-existent modules.
    $modules = array_intersect($feature->info['recommends'], $all_modules);
    // Find out if any modules are already enabled.
    $enabled = array_filter($modules, 'module_exists');

    // We only want disabled modules.
    if ($modules = array_diff($modules, $enabled)) {
      features_install_modules($modules);
      variable_set('lbqa_enabled_modules', $modules);

      // Let somebody know what we just did.
      $singular = 'The @modules module was enabled.';
      $plural = 'The following modules were enabled: @modules';
      $message = format_plural(count($modules), $singular, $plural, array('@modules' => implode(', ', $modules)));
      drupal_set_message($message);
    }
  }

  drupal_flush_all_caches();
}

/**
 * Implementation of hook_disable().
 */
function lbqa_disable() {
  if ($modules = variable_get('lbqa_enabled_modules', array())) {
    module_disable($modules);

    // Let somebody know what we just did.
    $singular = 'The @modules module was disabled.';
    $plural = 'The following modules were disabled: @modules';
    $message = format_plural(count($modules), $singular, $plural, array('@modules' => implode(', ', $modules)));
    drupal_set_message($message);

    // Delete the old variable.
    variable_del('lbqa_enabled_modules');
  }
}